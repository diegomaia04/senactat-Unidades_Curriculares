package main;

import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JPanel;

import sprites.Nave;

@SuppressWarnings("serial")
public class Engine extends JPanel implements Runnable, KeyListener {
	/*************************
	 **** VINCULAR A NAVE ****
	 *************************/
	Nave nave = new Nave();
	public int sentido;

	/********************
	 **** CONSTRUTOR ****
	 *********************/
	public Engine() {
		/**************************
		 **** CRIAR UMA THREAD ****
		 **************************/
		Thread game = new Thread(this);
		game.start(); // Iniciar processamento do jogo (run())
	}

	@Override
	public void run() {
		while (true) {
			/**************************
			 **** MECANICA DO JOGO ****
			 **************************/
			refresh(); // Atualizar o JPanel -> JFrame
			repaint(); // Redesenhar os assets
			delay(); // Tempo antes do refresh (ajustes UX)

		}
	}

	public void refresh() {

	}

	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		nave.exibirNave(g);

	}

	public void delay() {
		/********************************
		 **** TRATAMENTO DE EXCECOES ****
		 ********************************/
		try {
			Thread.sleep(5); // milissegundos

		} catch (Exception e) {
			System.out.println(e);
		}

	} // Fim do metodo void

	@Override
	public void keyTyped(KeyEvent e) {
		// TODO Auto-generated method stub

	}

	/******************************
	 **** PRESSIONAR UMA TECLA ****
	 ******************************/
	@Override
	public void keyPressed(KeyEvent e) {
		if (e.getKeyCode() == KeyEvent.VK_D) {
			nave.moveNave(sentido = 1);
		} else if  (e.getKeyCode() == KeyEvent.VK_A){
			nave.moveNave(sentido = -1);
		}

	}

	/**************************
	 **** SOLTAR UMA TECLA ****
	 **************************/
	@Override
	public void keyReleased(KeyEvent e) {
		// TODO Auto-generated method stub

	}
} // Fim da classe Engine
